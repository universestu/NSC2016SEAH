{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bo",
				"bodyParser"
			],
			[
				"f",
				"fun	Function"
			]
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 24,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 245,
				"line_ending": "Unix"
			}
		},
		{
			"file": "server.js",
			"settings":
			{
				"buffer_size": 2126,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/controllers/controller.js",
			"settings":
			{
				"buffer_size": 1108,
				"line_ending": "Unix"
			}
		},
		{
			"file": "query.js",
			"settings":
			{
				"buffer_size": 1002,
				"line_ending": "Windows",
				"name": "var mongodb = require('mongodb');"
			}
		},
		{
			"contents": "\n//lets require/import the mongodb native drivers.\nvar mongodb = require('mongodb');\n\n//We need to work with \"MongoClient\" interface in order to connect to a mongodb server.\nvar MongoClient = mongodb.MongoClient;\n\n// Connection URL. This is where your mongodb server is running.\nvar url = 'mongodb://localhost:27017/my_database_name';\n\n// Use connect method to connect to the Server\nMongoClient.connect(url, function (err, db) {\n  if (err) {\n    console.log('Unable to connect to the mongoDB server. Error:', err);\n  } else {\n    //HURRAY!! We are connected. :)\n    console.log('Connection established to', url);\n\n    // Get the documents collection\n    var collection = db.collection('users');\n\n    //Create some users\n    var user1 = {name: 'modulus admin', age: 42, roles: ['admin', 'moderator', 'user']};\n    var user2 = {name: 'modulus user', age: 22, roles: ['user']};\n    var user3 = {name: 'modulus super admin', age: 92, roles: ['super-admin', 'admin', 'moderator', 'user']};\n\n    // Insert some users\n    collection.insert([user1, user2, user3], function (err, result) {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log('Inserted %d documents into the \"users\" collection. The documents inserted with \"_id\" are:', result.length, result);\n      }\n      //Close connection\n      db.close();\n    });\n  }\n});",
			"settings":
			{
				"buffer_size": 1342,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 81.0,
		"selected_items":
		[
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/node/netpie",
		"/C/node/netpie/public",
		"/C/node/netpie/public/controllers"
	],
	"file_history":
	[
		"/C/AngularMaterialDemo/package.json",
		"/C/AngularMaterialDemo/.gitignore",
		"/C/node/mat/SEAH/gruntfile.js",
		"/C/Users/LILLAB1/Documents/GitHub/SEAH1/gruntfile.js",
		"/C/node/MEAN/NETPIE/trunk/package.json",
		"/C/node/contactapp/app/routes/users.js",
		"/C/node/contactapp/app/controllers/index.js"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"time",
			"jade"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 245,
						"regions":
						{
						},
						"selection":
						[
							[
								163,
								163
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2126,
						"regions":
						{
						},
						"selection":
						[
							[
								1753,
								1753
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 585.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "public/controllers/controller.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1108,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "query.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1002,
						"regions":
						{
						},
						"selection":
						[
							[
								586,
								586
							]
						],
						"settings":
						{
							"auto_name": "var mongodb = require('mongodb');",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1342,
						"regions":
						{
						},
						"selection":
						[
							[
								947,
								947
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "netpie.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
